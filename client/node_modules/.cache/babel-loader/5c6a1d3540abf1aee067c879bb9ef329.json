{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Shiv mart\\\\client\\\\src\\\\pages\\\\admin\\\\products\\\\update\\\\default\\\\AdminUpdate.js\",\n    _s = $RefreshSig$();\n\nimport styles from './adminUpdate.module.css';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Error from \"../../../../../components/feedback/error/Error\";\nimport Loading from \"../../../../../components/loading/Loading\";\nimport { useDispatch } from \"react-redux\";\nimport { adminUpdateDatabase } from \"../../../../../actions/products\";\nimport Warning from \"../../../../../components/feedback/warning/Warning\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminUpdate = () => {\n  _s();\n\n  const [file, setFile] = useState(null);\n  const [data, setData] = useState(\"\");\n  const [mode, setMode] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [warning, setWarning] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    setData(\"\");\n    const reader = new FileReader();\n\n    if (file != null) {\n      reader.onload = () => {\n        const lines = reader.result;\n        setData(lines);\n      };\n\n      reader.readAsText(file);\n    }\n  }, [file]);\n\n  const handleSubmit = () => {\n    // check if the file was uploaded\n    if (!data || !file) return setError(\"Please upload a CSV file\"); // check if there's a modification mode selected\n\n    if (!mode) return setError(\"Please select a mode\"); // check that all fields are included in the header\n\n    const fields = ['product_id', 'name', 'price', 'image', 'weight', 'measurement', 'category', 'stock'];\n    const headers = data.split(\"\\n\")[0].split(\",\");\n\n    for (const field of fields) {\n      let found = false;\n\n      for (const header of headers) {\n        const headerCleaned = header.toLowerCase().replace(/(\\r)+/, \"\");\n\n        if (headerCleaned === field.toLowerCase()) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) return setError(`Field ${field} was not found in the CSV header`);\n    }\n\n    const onSuccess = updatedData => {\n      setLoading(false);\n      if (!updatedData.length) return setWarning('No changes; database matches the csv file');\n      navigate('/admin/products/update/success');\n    };\n\n    const onError = e => {\n      setError(e.message);\n      setLoading(false);\n    };\n\n    setLoading(true);\n    dispatch(adminUpdateDatabase(data, mode, onSuccess, onError));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['wrapper'],\n    children: [loading && /*#__PURE__*/_jsxDEV(Loading, {\n      text: 'Updating Database',\n      overlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      error: error,\n      setError: setError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }, this), warning && /*#__PURE__*/_jsxDEV(Warning, {\n      warning: warning,\n      setWarning: setWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['header'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'heading',\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Update Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles['note'],\n          children: \"Warning:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 20\n        }, this), \" Once the database is updated it cannot be restored.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['action'],\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setFile(e.target.files[0]),\n        type: 'file',\n        accept: 'text/csv'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['mode'],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles['mode-title'],\n          children: \"Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setMode(\"UPDATE\"),\n          className: `${styles[`mode-btn`]} ${mode === \"UPDATE\" && styles['active']}`,\n          children: \"Update products by id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setMode(\"REGENERATE\"),\n          className: `${styles[`mode-btn`]} ${mode === \"REGENERATE\" && styles['active']}`,\n          children: \"Delete all entries and upload csv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleSubmit,\n        className: `btn1 ${styles['update']}`,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: styles['format'],\n        to: '/admin/products/update/help',\n        children: \"CSV Format Guidelines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminUpdate, \"8lUJdqE8LUHpAAMSSDlptP8XDjQ=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c = AdminUpdate;\nexport default AdminUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUpdate\");","map":{"version":3,"names":["styles","Link","useNavigate","useEffect","useState","Error","Loading","useDispatch","adminUpdateDatabase","Warning","AdminUpdate","file","setFile","data","setData","mode","setMode","error","setError","warning","setWarning","loading","setLoading","dispatch","navigate","reader","FileReader","onload","lines","result","readAsText","handleSubmit","fields","headers","split","field","found","header","headerCleaned","toLowerCase","replace","onSuccess","updatedData","length","onError","e","message","target","files"],"sources":["C:/Users/hp/Desktop/Shiv mart/client/src/pages/admin/products/update/default/AdminUpdate.js"],"sourcesContent":["import styles from './adminUpdate.module.css';\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Error from \"../../../../../components/feedback/error/Error\";\r\nimport Loading from \"../../../../../components/loading/Loading\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {adminUpdateDatabase} from \"../../../../../actions/products\";\r\nimport Warning from \"../../../../../components/feedback/warning/Warning\";\r\n\r\nconst AdminUpdate = () => {\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [data, setData] = useState(\"\");\r\n    const [mode, setMode] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [warning, setWarning] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setData(\"\");\r\n        const reader = new FileReader()\r\n        if (file != null) {\r\n            reader.onload = () => {\r\n                const lines = reader.result;\r\n                setData(lines);\r\n            };\r\n            reader.readAsText(file);\r\n        }\r\n    }, [file])\r\n\r\n    const handleSubmit = () => {\r\n\r\n        // check if the file was uploaded\r\n        if (!data || !file)\r\n            return setError(\"Please upload a CSV file\");\r\n\r\n        // check if there's a modification mode selected\r\n        if (!mode)\r\n            return setError(\"Please select a mode\");\r\n\r\n        // check that all fields are included in the header\r\n        const fields = ['product_id', 'name', 'price', 'image', 'weight', 'measurement', 'category', 'stock'];\r\n        const headers = data.split(\"\\n\")[0].split(\",\");\r\n        for (const field of fields) {\r\n            let found = false;\r\n            for (const header of headers) {\r\n                const headerCleaned = header.toLowerCase().replace(/(\\r)+/, \"\");\r\n                if (headerCleaned === field.toLowerCase()) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!found)\r\n                return setError(`Field ${field} was not found in the CSV header`);\r\n        }\r\n\r\n        const onSuccess = (updatedData) => {\r\n            setLoading(false);\r\n            if (!updatedData.length)\r\n                return setWarning('No changes; database matches the csv file');\r\n            navigate('/admin/products/update/success');\r\n        }\r\n\r\n        const onError = (e) => {\r\n            setError(e.message);\r\n            setLoading(false);\r\n        }\r\n\r\n        setLoading(true);\r\n        dispatch(adminUpdateDatabase(data, mode, onSuccess, onError));\r\n    }\r\n\r\n    return (\r\n        <div className={styles['wrapper']}>\r\n            {loading && <Loading text={'Updating Database'} overlay={true}/>}\r\n            {error && <Error error={error} setError={setError}/>}\r\n            {warning && <Warning warning={warning} setWarning={setWarning}/>}\r\n            <div className={styles['header']}>\r\n                <div className={'heading'}>\r\n                    <h1>Update Products</h1>\r\n                </div>\r\n                <p><span className={styles['note']}>Warning:</span> Once the database is updated it cannot be restored.\r\n                </p>\r\n            </div>\r\n            <div className={styles['action']}>\r\n                <input onChange={(e) => setFile(e.target.files[0])} type={'file'} accept={'text/csv'}/>\r\n                <div className={styles['mode']}>\r\n                    <div className={styles['mode-title']}>Mode</div>\r\n                    <div onClick={() => setMode(\"UPDATE\")}\r\n                         className={`${styles[`mode-btn`]} ${mode === \"UPDATE\" && styles['active']}`}>Update products by\r\n                        id\r\n                    </div>\r\n                    <div onClick={() => setMode(\"REGENERATE\")}\r\n                         className={`${styles[`mode-btn`]} ${mode === \"REGENERATE\" && styles['active']}`}>Delete all\r\n                        entries and\r\n                        upload csv\r\n                    </div>\r\n                </div>\r\n                <div onClick={handleSubmit} className={`btn1 ${styles['update']}`}>Update</div>\r\n                <Link className={styles['format']} to={'/admin/products/update/help'}>CSV Format Guidelines</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminUpdate;"],"mappings":"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"},"metadata":{},"sourceType":"module"}